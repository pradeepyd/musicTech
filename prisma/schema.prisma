// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define roles for user access control
enum Role {
  ADMIN
  INSTRUCTOR
  USER
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  sessions          Session[]

  // Relationships
  courses   Course[]  @relation("InstructorCourses") // Courses created by this instructor
  enrollments Enrollment[]
}

model Course {
  id           String    @id @default(uuid())
  title        String
  description  String
  price        Float
  validityDays Int       // Validity of course in days
  createdAt    DateTime  @default(now())

  // Instructor Relation
  instructor   User      @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId String

  enrollments  Enrollment[]
}

model Enrollment {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   String
  enrolledAt DateTime @default(now())
}
